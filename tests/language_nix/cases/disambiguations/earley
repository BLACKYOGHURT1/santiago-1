0
  "Γ" := rules • "expr" [0-0]
  "expr" := rules • "expr_function" [0-0]
  "expr_function" := rules • "expr_if" [0-0]
  "expr_if" := rules • "expr_op" [0-0]
  "expr_op" := rules • "NOT" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "EQ" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "NEQ" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "<" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "LEQ" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" ">" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "GEQ" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "AND" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "OR" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "IMPL" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "UPDATE" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "?" "attrpath" [0-0]
  "expr_op" := rules • "expr_op" "+" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "-" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "*" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "/" "expr_op" [0-0]
  "expr_op" := rules • "expr_op" "CONCAT" "expr_op" [0-0]
  "NOT" := lexemes • "!" [0-0]
1
  "NOT" := lexemes "!" • [0-1]
  "expr_op" := rules "NOT" • "expr_op" [0-1]
  "expr_op" := rules • "expr_op" "EQ" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "NEQ" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "<" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "LEQ" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" ">" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "GEQ" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "AND" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "OR" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "IMPL" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "UPDATE" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "?" "attrpath" [1-1]
  "expr_op" := rules • "expr_op" "+" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "-" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "*" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "/" "expr_op" [1-1]
  "expr_op" := rules • "expr_op" "CONCAT" "expr_op" [1-1]
  "expr_op" := rules • "expr_app" [1-1]
  "expr_app" := rules • "expr_app" "expr_select" [1-1]
  "expr_app" := rules • "expr_select" [1-1]
  "expr_select" := rules • "expr_simple" "." "attrpath" [1-1]
  "expr_select" := rules • "expr_simple" "." "attrpath" "OR_KW" "expr_select" [1-1]
  "expr_select" := rules • "expr_simple" "OR_KW" [1-1]
  "expr_select" := rules • "expr_simple" [1-1]
  "expr_simple" := rules • "ID" [1-1]
  "ID" := lexemes • "ID" [1-1]
2
  "ID" := lexemes "ID" • [1-2]
  "expr_simple" := rules "ID" • [1-2]
  "expr_select" := rules "expr_simple" • "." "attrpath" [1-2]
  "expr_select" := rules "expr_simple" • "." "attrpath" "OR_KW" "expr_select" [1-2]
  "expr_select" := rules "expr_simple" • "OR_KW" [1-2]
  "expr_select" := rules "expr_simple" • [1-2]
  "expr_app" := rules "expr_select" • [1-2]
  "expr_op" := rules "expr_app" • [1-2]
  "expr_app" := rules "expr_app" • "expr_select" [1-2]
  "expr_op" := rules "NOT" "expr_op" • [0-2]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "<" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • ">" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "?" "attrpath" [1-2]
  "expr_op" := rules "expr_op" • "+" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "-" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "*" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "/" "expr_op" [1-2]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [1-2]
  "expr_if" := rules "expr_op" • [0-2]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "<" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • ">" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "?" "attrpath" [0-2]
  "expr_op" := rules "expr_op" • "+" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "-" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "*" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "/" "expr_op" [0-2]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [0-2]
  "?" := lexemes • "?" [2-2]
  "expr_function" := rules "expr_if" • [0-2]
  "expr" := rules "expr_function" • [0-2]
  "Γ" := rules "expr" • [0-2]
3
  "?" := lexemes "?" • [2-3]
  "expr_op" := rules "expr_op" "?" • "attrpath" [1-3]
  "expr_op" := rules "expr_op" "?" • "attrpath" [0-3]
  "attrpath" := rules • "attrpath" "." "attr" [3-3]
  "attrpath" := rules • "attrpath" "." "string_attr" [3-3]
  "attrpath" := rules • "attr" [3-3]
  "attr" := rules • "ID" [3-3]
  "ID" := lexemes • "ID" [3-3]
4
  "ID" := lexemes "ID" • [3-4]
  "attr" := rules "ID" • [3-4]
  "attrpath" := rules "attr" • [3-4]
  "expr_op" := rules "expr_op" "?" "attrpath" • [1-4]
  "expr_op" := rules "expr_op" "?" "attrpath" • [0-4]
  "attrpath" := rules "attrpath" • "." "attr" [3-4]
  "attrpath" := rules "attrpath" • "." "string_attr" [3-4]
  "expr_op" := rules "NOT" "expr_op" • [0-4]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "<" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • ">" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "?" "attrpath" [1-4]
  "expr_op" := rules "expr_op" • "+" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "-" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "*" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "/" "expr_op" [1-4]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [1-4]
  "expr_if" := rules "expr_op" • [0-4]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "<" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • ">" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "?" "attrpath" [0-4]
  "expr_op" := rules "expr_op" • "+" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "-" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "*" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "/" "expr_op" [0-4]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [0-4]
  "OR" := lexemes • "OR" [4-4]
  "expr_function" := rules "expr_if" • [0-4]
  "expr" := rules "expr_function" • [0-4]
  "Γ" := rules "expr" • [0-4]
5
  "OR" := lexemes "OR" • [4-5]
  "expr_op" := rules "expr_op" "OR" • "expr_op" [1-5]
  "expr_op" := rules "expr_op" "OR" • "expr_op" [0-5]
  "expr_op" := rules • "expr_op" "EQ" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "NEQ" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "<" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "LEQ" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" ">" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "GEQ" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "AND" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "OR" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "IMPL" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "UPDATE" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "?" "attrpath" [5-5]
  "expr_op" := rules • "expr_op" "+" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "-" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "*" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "/" "expr_op" [5-5]
  "expr_op" := rules • "expr_op" "CONCAT" "expr_op" [5-5]
  "expr_op" := rules • "expr_app" [5-5]
  "expr_app" := rules • "expr_app" "expr_select" [5-5]
  "expr_app" := rules • "expr_select" [5-5]
  "expr_select" := rules • "expr_simple" "." "attrpath" [5-5]
  "expr_select" := rules • "expr_simple" "." "attrpath" "OR_KW" "expr_select" [5-5]
  "expr_select" := rules • "expr_simple" "OR_KW" [5-5]
  "expr_select" := rules • "expr_simple" [5-5]
  "expr_simple" := rules • "ID" [5-5]
  "ID" := lexemes • "ID" [5-5]
6
  "ID" := lexemes "ID" • [5-6]
  "expr_simple" := rules "ID" • [5-6]
  "expr_select" := rules "expr_simple" • "." "attrpath" [5-6]
  "expr_select" := rules "expr_simple" • "." "attrpath" "OR_KW" "expr_select" [5-6]
  "expr_select" := rules "expr_simple" • "OR_KW" [5-6]
  "expr_select" := rules "expr_simple" • [5-6]
  "." := lexemes • "." [6-6]
  "expr_app" := rules "expr_select" • [5-6]
  "expr_op" := rules "expr_app" • [5-6]
  "expr_app" := rules "expr_app" • "expr_select" [5-6]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [1-6]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [0-6]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "<" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • ">" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "?" "attrpath" [5-6]
  "expr_op" := rules "expr_op" • "+" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "-" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "*" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "/" "expr_op" [5-6]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [5-6]
  "expr_op" := rules "NOT" "expr_op" • [0-6]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "<" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • ">" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "?" "attrpath" [1-6]
  "expr_op" := rules "expr_op" • "+" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "-" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "*" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "/" "expr_op" [1-6]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [1-6]
  "expr_if" := rules "expr_op" • [0-6]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "<" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • ">" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "?" "attrpath" [0-6]
  "expr_op" := rules "expr_op" • "+" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "-" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "*" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "/" "expr_op" [0-6]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [0-6]
  "expr_function" := rules "expr_if" • [0-6]
  "expr" := rules "expr_function" • [0-6]
  "Γ" := rules "expr" • [0-6]
7
  "." := lexemes "." • [6-7]
  "expr_select" := rules "expr_simple" "." • "attrpath" [5-7]
  "expr_select" := rules "expr_simple" "." • "attrpath" "OR_KW" "expr_select" [5-7]
  "attrpath" := rules • "attrpath" "." "attr" [7-7]
  "attrpath" := rules • "attrpath" "." "string_attr" [7-7]
  "attrpath" := rules • "attr" [7-7]
  "attr" := rules • "ID" [7-7]
  "ID" := lexemes • "ID" [7-7]
8
  "ID" := lexemes "ID" • [7-8]
  "attr" := rules "ID" • [7-8]
  "attrpath" := rules "attr" • [7-8]
  "expr_select" := rules "expr_simple" "." "attrpath" • [5-8]
  "expr_select" := rules "expr_simple" "." "attrpath" • "OR_KW" "expr_select" [5-8]
  "attrpath" := rules "attrpath" • "." "attr" [7-8]
  "attrpath" := rules "attrpath" • "." "string_attr" [7-8]
  "expr_app" := rules "expr_select" • [5-8]
  "expr_op" := rules "expr_app" • [5-8]
  "expr_app" := rules "expr_app" • "expr_select" [5-8]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [1-8]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [0-8]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "<" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • ">" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "?" "attrpath" [5-8]
  "expr_op" := rules "expr_op" • "+" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "-" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "*" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "/" "expr_op" [5-8]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [5-8]
  "expr_select" := rules • "expr_simple" "." "attrpath" [8-8]
  "expr_select" := rules • "expr_simple" "." "attrpath" "OR_KW" "expr_select" [8-8]
  "expr_select" := rules • "expr_simple" "OR_KW" [8-8]
  "expr_select" := rules • "expr_simple" [8-8]
  "expr_op" := rules "NOT" "expr_op" • [0-8]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "<" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • ">" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "?" "attrpath" [1-8]
  "expr_op" := rules "expr_op" • "+" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "-" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "*" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "/" "expr_op" [1-8]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [1-8]
  "expr_if" := rules "expr_op" • [0-8]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "<" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • ">" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "?" "attrpath" [0-8]
  "expr_op" := rules "expr_op" • "+" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "-" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "*" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "/" "expr_op" [0-8]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [0-8]
  "expr_simple" := rules • "ID" [8-8]
  "expr_function" := rules "expr_if" • [0-8]
  "ID" := lexemes • "ID" [8-8]
  "expr" := rules "expr_function" • [0-8]
  "Γ" := rules "expr" • [0-8]
9
  "ID" := lexemes "ID" • [8-9]
  "expr_simple" := rules "ID" • [8-9]
  "expr_select" := rules "expr_simple" • "." "attrpath" [8-9]
  "expr_select" := rules "expr_simple" • "." "attrpath" "OR_KW" "expr_select" [8-9]
  "expr_select" := rules "expr_simple" • "OR_KW" [8-9]
  "expr_select" := rules "expr_simple" • [8-9]
  "expr_app" := rules "expr_app" "expr_select" • [5-9]
  "expr_op" := rules "expr_app" • [5-9]
  "expr_app" := rules "expr_app" • "expr_select" [5-9]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [1-9]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [0-9]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "<" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • ">" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "?" "attrpath" [5-9]
  "expr_op" := rules "expr_op" • "+" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "-" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "*" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "/" "expr_op" [5-9]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [5-9]
  "expr_select" := rules • "expr_simple" "." "attrpath" [9-9]
  "expr_select" := rules • "expr_simple" "." "attrpath" "OR_KW" "expr_select" [9-9]
  "expr_select" := rules • "expr_simple" "OR_KW" [9-9]
  "expr_select" := rules • "expr_simple" [9-9]
  "expr_op" := rules "NOT" "expr_op" • [0-9]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "<" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • ">" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "?" "attrpath" [1-9]
  "expr_op" := rules "expr_op" • "+" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "-" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "*" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "/" "expr_op" [1-9]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [1-9]
  "expr_if" := rules "expr_op" • [0-9]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "<" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • ">" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "?" "attrpath" [0-9]
  "expr_op" := rules "expr_op" • "+" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "-" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "*" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "/" "expr_op" [0-9]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [0-9]
  "expr_simple" := rules • "ID" [9-9]
  "expr_function" := rules "expr_if" • [0-9]
  "ID" := lexemes • "ID" [9-9]
  "expr" := rules "expr_function" • [0-9]
  "Γ" := rules "expr" • [0-9]
10
  "ID" := lexemes "ID" • [9-10]
  "expr_simple" := rules "ID" • [9-10]
  "expr_select" := rules "expr_simple" • "." "attrpath" [9-10]
  "expr_select" := rules "expr_simple" • "." "attrpath" "OR_KW" "expr_select" [9-10]
  "expr_select" := rules "expr_simple" • "OR_KW" [9-10]
  "expr_select" := rules "expr_simple" • [9-10]
  "." := lexemes • "." [10-10]
  "expr_app" := rules "expr_app" "expr_select" • [5-10]
  "expr_op" := rules "expr_app" • [5-10]
  "expr_app" := rules "expr_app" • "expr_select" [5-10]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [1-10]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [0-10]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "<" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • ">" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "?" "attrpath" [5-10]
  "expr_op" := rules "expr_op" • "+" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "-" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "*" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "/" "expr_op" [5-10]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [5-10]
  "expr_op" := rules "NOT" "expr_op" • [0-10]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "<" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • ">" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "?" "attrpath" [1-10]
  "expr_op" := rules "expr_op" • "+" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "-" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "*" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "/" "expr_op" [1-10]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [1-10]
  "expr_if" := rules "expr_op" • [0-10]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "<" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • ">" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "?" "attrpath" [0-10]
  "expr_op" := rules "expr_op" • "+" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "-" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "*" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "/" "expr_op" [0-10]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [0-10]
  "expr_function" := rules "expr_if" • [0-10]
  "expr" := rules "expr_function" • [0-10]
  "Γ" := rules "expr" • [0-10]
11
  "." := lexemes "." • [10-11]
  "expr_select" := rules "expr_simple" "." • "attrpath" [9-11]
  "expr_select" := rules "expr_simple" "." • "attrpath" "OR_KW" "expr_select" [9-11]
  "attrpath" := rules • "attrpath" "." "attr" [11-11]
  "attrpath" := rules • "attrpath" "." "string_attr" [11-11]
  "attrpath" := rules • "attr" [11-11]
  "attr" := rules • "ID" [11-11]
  "ID" := lexemes • "ID" [11-11]
12
  "ID" := lexemes "ID" • [11-12]
  "attr" := rules "ID" • [11-12]
  "attrpath" := rules "attr" • [11-12]
  "expr_select" := rules "expr_simple" "." "attrpath" • [9-12]
  "expr_select" := rules "expr_simple" "." "attrpath" • "OR_KW" "expr_select" [9-12]
  "attrpath" := rules "attrpath" • "." "attr" [11-12]
  "attrpath" := rules "attrpath" • "." "string_attr" [11-12]
  "expr_app" := rules "expr_app" "expr_select" • [5-12]
  "expr_op" := rules "expr_app" • [5-12]
  "expr_app" := rules "expr_app" • "expr_select" [5-12]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [1-12]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [0-12]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "<" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • ">" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "?" "attrpath" [5-12]
  "expr_op" := rules "expr_op" • "+" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "-" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "*" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "/" "expr_op" [5-12]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [5-12]
  "expr_op" := rules "NOT" "expr_op" • [0-12]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "<" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • ">" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "?" "attrpath" [1-12]
  "expr_op" := rules "expr_op" • "+" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "-" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "*" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "/" "expr_op" [1-12]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [1-12]
  "expr_if" := rules "expr_op" • [0-12]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "<" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • ">" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "?" "attrpath" [0-12]
  "expr_op" := rules "expr_op" • "+" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "-" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "*" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "/" "expr_op" [0-12]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [0-12]
  "EQ" := lexemes • "EQ" [12-12]
  "expr_function" := rules "expr_if" • [0-12]
  "expr" := rules "expr_function" • [0-12]
  "Γ" := rules "expr" • [0-12]
13
  "EQ" := lexemes "EQ" • [12-13]
  "expr_op" := rules "expr_op" "EQ" • "expr_op" [5-13]
  "expr_op" := rules "expr_op" "EQ" • "expr_op" [1-13]
  "expr_op" := rules "expr_op" "EQ" • "expr_op" [0-13]
  "expr_op" := rules • "expr_op" "EQ" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "NEQ" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "<" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "LEQ" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" ">" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "GEQ" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "AND" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "OR" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "IMPL" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "UPDATE" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "?" "attrpath" [13-13]
  "expr_op" := rules • "expr_op" "+" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "-" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "*" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "/" "expr_op" [13-13]
  "expr_op" := rules • "expr_op" "CONCAT" "expr_op" [13-13]
  "expr_op" := rules • "expr_app" [13-13]
  "expr_app" := rules • "expr_app" "expr_select" [13-13]
  "expr_app" := rules • "expr_select" [13-13]
  "expr_select" := rules • "expr_simple" "." "attrpath" [13-13]
  "expr_select" := rules • "expr_simple" "." "attrpath" "OR_KW" "expr_select" [13-13]
  "expr_select" := rules • "expr_simple" "OR_KW" [13-13]
  "expr_select" := rules • "expr_simple" [13-13]
  "expr_simple" := rules • "INT" [13-13]
  "INT" := lexemes • "INT" [13-13]
14
  "INT" := lexemes "INT" • [13-14]
  "expr_simple" := rules "INT" • [13-14]
  "expr_select" := rules "expr_simple" • "." "attrpath" [13-14]
  "expr_select" := rules "expr_simple" • "." "attrpath" "OR_KW" "expr_select" [13-14]
  "expr_select" := rules "expr_simple" • "OR_KW" [13-14]
  "expr_select" := rules "expr_simple" • [13-14]
  "." := lexemes • "." [14-14]
  "OR_KW" := lexemes • "OR_KW" [14-14]
  "expr_app" := rules "expr_select" • [13-14]
  "expr_op" := rules "expr_app" • [13-14]
  "expr_app" := rules "expr_app" • "expr_select" [13-14]
  "expr_op" := rules "expr_op" "EQ" "expr_op" • [5-14]
  "expr_op" := rules "expr_op" "EQ" "expr_op" • [1-14]
  "expr_op" := rules "expr_op" "EQ" "expr_op" • [0-14]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "<" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • ">" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "?" "attrpath" [13-14]
  "expr_op" := rules "expr_op" • "+" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "-" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "*" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "/" "expr_op" [13-14]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [13-14]
  "expr_select" := rules • "expr_simple" "." "attrpath" [14-14]
  "expr_select" := rules • "expr_simple" "." "attrpath" "OR_KW" "expr_select" [14-14]
  "expr_select" := rules • "expr_simple" "OR_KW" [14-14]
  "expr_select" := rules • "expr_simple" [14-14]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [1-14]
  "expr_op" := rules "expr_op" "OR" "expr_op" • [0-14]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "<" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • ">" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "?" "attrpath" [5-14]
  "expr_op" := rules "expr_op" • "+" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "-" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "*" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "/" "expr_op" [5-14]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [5-14]
  "expr_op" := rules "NOT" "expr_op" • [0-14]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "<" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • ">" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "?" "attrpath" [1-14]
  "expr_op" := rules "expr_op" • "+" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "-" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "*" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "/" "expr_op" [1-14]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [1-14]
  "expr_if" := rules "expr_op" • [0-14]
  "expr_op" := rules "expr_op" • "EQ" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "NEQ" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "<" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "LEQ" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • ">" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "GEQ" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "AND" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "OR" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "IMPL" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "UPDATE" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "?" "attrpath" [0-14]
  "expr_op" := rules "expr_op" • "+" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "-" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "*" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "/" "expr_op" [0-14]
  "expr_op" := rules "expr_op" • "CONCAT" "expr_op" [0-14]
  "EQ" := lexemes • "EQ" [14-14]
  "NEQ" := lexemes • "NEQ" [14-14]
  "<" := lexemes • "<" [14-14]
  "LEQ" := lexemes • "LEQ" [14-14]
  ">" := lexemes • ">" [14-14]
  "GEQ" := lexemes • "GEQ" [14-14]
  "AND" := lexemes • "AND" [14-14]
  "OR" := lexemes • "OR" [14-14]
  "IMPL" := lexemes • "IMPL" [14-14]
  "UPDATE" := lexemes • "UPDATE" [14-14]
  "?" := lexemes • "?" [14-14]
  "+" := lexemes • "+" [14-14]
  "-" := lexemes • "-" [14-14]
  "*" := lexemes • "*" [14-14]
  "/" := lexemes • "/" [14-14]
  "CONCAT" := lexemes • "CONCAT" [14-14]
  "expr_simple" := rules • "ID" [14-14]
  "expr_simple" := rules • "INT" [14-14]
  "expr_simple" := rules • "FLOAT" [14-14]
  "expr_simple" := rules • "\"" "string_parts" "\"" [14-14]
  "expr_simple" := rules • "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE" [14-14]
  "expr_simple" := rules • "path_start" "PATH_END" [14-14]
  "expr_simple" := rules • "path_start" "string_parts_interpolated" "PATH_END" [14-14]
  "expr_simple" := rules • "SPATH" [14-14]
  "expr_simple" := rules • "URI" [14-14]
  "expr_simple" := rules • "(" "expr" ")" [14-14]
  "expr_simple" := rules • "LET" "{" "binds" "}" [14-14]
  "expr_simple" := rules • "REC" "{" "binds" "}" [14-14]
  "expr_simple" := rules • "{" "binds" "}" [14-14]
  "expr_simple" := rules • "[" "expr_list" "]" [14-14]
  "expr_function" := rules "expr_if" • [0-14]
  "ID" := lexemes • "ID" [14-14]
  "INT" := lexemes • "INT" [14-14]
  "FLOAT" := lexemes • "FLOAT" [14-14]
  "\"" := lexemes • "\"" [14-14]
  "IND_STRING_OPEN" := lexemes • "IND_STRING_OPEN" [14-14]
  "path_start" := rules • "PATH" [14-14]
  "path_start" := rules • "HPATH" [14-14]
  "SPATH" := lexemes • "SPATH" [14-14]
  "URI" := lexemes • "URI" [14-14]
  "(" := lexemes • "(" [14-14]
  "LET" := lexemes • "LET" [14-14]
  "REC" := lexemes • "REC" [14-14]
  "{" := lexemes • "{" [14-14]
  "[" := lexemes • "[" [14-14]
  "expr" := rules "expr_function" • [0-14]
  "PATH" := lexemes • "PATH" [14-14]
  "HPATH" := lexemes • "HPATH" [14-14]
  "Γ" := rules "expr" • [0-14]